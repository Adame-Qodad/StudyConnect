1749751333
0f81f4de6dfd2d6058f2f36fc781f24f-phpdoc%3Aa336cc0d86421f32d5f63321269f7dd4-9193f52283bf912098e1d5bd0d6ca554
s:35848:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:39:" phpDocumentor\Reflection\Php\File name";s:6:"uz.php";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"9193f52283bf912098e1d5bd0d6ca554";s:39:" phpDocumentor\Reflection\Php\File path";s:51:"vendor/symfony/intl/Resources/data/timezones/uz.php";s:41:" phpDocumentor\Reflection\Php\File source";s:25959:"<?php

return [
    'Names' => [
        'Africa/Abidjan' => 'Grinvich o‘rtacha vaqti (Abidjan)',
        'Africa/Accra' => 'Grinvich o‘rtacha vaqti (Akkra)',
        'Africa/Addis_Ababa' => 'Sharqiy Afrika vaqti (Addis-Abeba)',
        'Africa/Algiers' => 'Markaziy Yevropa vaqti (Jazoir)',
        'Africa/Asmera' => 'Sharqiy Afrika vaqti (Asmera)',
        'Africa/Bamako' => 'Grinvich o‘rtacha vaqti (Bamako)',
        'Africa/Bangui' => 'Gʻarbiy Afrika vaqti (Bangi)',
        'Africa/Banjul' => 'Grinvich o‘rtacha vaqti (Banjul)',
        'Africa/Bissau' => 'Grinvich o‘rtacha vaqti (Bisau)',
        'Africa/Blantyre' => 'Markaziy Afrika vaqti (Blantayr)',
        'Africa/Brazzaville' => 'Gʻarbiy Afrika vaqti (Brazzavil)',
        'Africa/Bujumbura' => 'Markaziy Afrika vaqti (Bujumbura)',
        'Africa/Cairo' => 'Sharqiy Yevropa vaqti (Qohira)',
        'Africa/Casablanca' => 'G‘arbiy Yevropa vaqti (Kasablanka)',
        'Africa/Ceuta' => 'Markaziy Yevropa vaqti (Seuta)',
        'Africa/Conakry' => 'Grinvich o‘rtacha vaqti (Konakri)',
        'Africa/Dakar' => 'Grinvich o‘rtacha vaqti (Dakar)',
        'Africa/Dar_es_Salaam' => 'Sharqiy Afrika vaqti (Dor-us-Salom)',
        'Africa/Djibouti' => 'Sharqiy Afrika vaqti (Jibuti)',
        'Africa/Douala' => 'Gʻarbiy Afrika vaqti (Duala)',
        'Africa/El_Aaiun' => 'G‘arbiy Yevropa vaqti (Al-Ayun)',
        'Africa/Freetown' => 'Grinvich o‘rtacha vaqti (Fritaun)',
        'Africa/Gaborone' => 'Markaziy Afrika vaqti (Gaborone)',
        'Africa/Harare' => 'Markaziy Afrika vaqti (Xarare)',
        'Africa/Johannesburg' => 'Janubiy Afrika standart vaqti (Yoxannesburg)',
        'Africa/Juba' => 'Markaziy Afrika vaqti (Juba)',
        'Africa/Kampala' => 'Sharqiy Afrika vaqti (Kampala)',
        'Africa/Khartoum' => 'Markaziy Afrika vaqti (Xartum)',
        'Africa/Kigali' => 'Markaziy Afrika vaqti (Kigali)',
        'Africa/Kinshasa' => 'Gʻarbiy Afrika vaqti (Kinshasa)',
        'Africa/Lagos' => 'Gʻarbiy Afrika vaqti (Lagos)',
        'Africa/Libreville' => 'Gʻarbiy Afrika vaqti (Librevil)',
        'Africa/Lome' => 'Grinvich o‘rtacha vaqti (Lome)',
        'Africa/Luanda' => 'Gʻarbiy Afrika vaqti (Luanda)',
        'Africa/Lubumbashi' => 'Markaziy Afrika vaqti (Lubumbashi)',
        'Africa/Lusaka' => 'Markaziy Afrika vaqti (Lusaka)',
        'Africa/Malabo' => 'Gʻarbiy Afrika vaqti (Malabo)',
        'Africa/Maputo' => 'Markaziy Afrika vaqti (Maputu)',
        'Africa/Maseru' => 'Janubiy Afrika standart vaqti (Maseru)',
        'Africa/Mbabane' => 'Janubiy Afrika standart vaqti (Mbabane)',
        'Africa/Mogadishu' => 'Sharqiy Afrika vaqti (Mogadisho)',
        'Africa/Monrovia' => 'Grinvich o‘rtacha vaqti (Monroviya)',
        'Africa/Nairobi' => 'Sharqiy Afrika vaqti (Nayrobi)',
        'Africa/Ndjamena' => 'Gʻarbiy Afrika vaqti (Ndjamena)',
        'Africa/Niamey' => 'Gʻarbiy Afrika vaqti (Niamey)',
        'Africa/Nouakchott' => 'Grinvich o‘rtacha vaqti (Nouakchott)',
        'Africa/Ouagadougou' => 'Grinvich o‘rtacha vaqti (Uagadugu)',
        'Africa/Porto-Novo' => 'Gʻarbiy Afrika vaqti (Porto-Novo)',
        'Africa/Sao_Tome' => 'Grinvich o‘rtacha vaqti (San-Tome)',
        'Africa/Tripoli' => 'Sharqiy Yevropa vaqti (Tripoli)',
        'Africa/Tunis' => 'Markaziy Yevropa vaqti (Tunis)',
        'Africa/Windhoek' => 'Markaziy Afrika vaqti (Vindxuk)',
        'America/Adak' => 'Gavayi-aleut vaqti (Adak oroli)',
        'America/Anchorage' => 'Alyaska vaqti (Ankorij)',
        'America/Anguilla' => 'Atlantika vaqti (Angilya)',
        'America/Antigua' => 'Atlantika vaqti (Antigua)',
        'America/Araguaina' => 'Braziliya vaqti (Araguaina)',
        'America/Argentina/La_Rioja' => 'Argentina vaqti (La-Rioxa)',
        'America/Argentina/Rio_Gallegos' => 'Argentina vaqti (Rio-Galyegos)',
        'America/Argentina/Salta' => 'Argentina vaqti (Salta)',
        'America/Argentina/San_Juan' => 'Argentina vaqti (San-Xuan)',
        'America/Argentina/San_Luis' => 'Argentina vaqti (San-Luis)',
        'America/Argentina/Tucuman' => 'Argentina vaqti (Tukuman)',
        'America/Argentina/Ushuaia' => 'Argentina vaqti (Ushuaya)',
        'America/Aruba' => 'Atlantika vaqti (Aruba)',
        'America/Asuncion' => 'Paragvay vaqti (Asunson)',
        'America/Bahia' => 'Braziliya vaqti (Baiya)',
        'America/Bahia_Banderas' => 'Markaziy Amerika vaqti (Bahiya-Banderas)',
        'America/Barbados' => 'Atlantika vaqti (Barbados)',
        'America/Belem' => 'Braziliya vaqti (Belem)',
        'America/Belize' => 'Markaziy Amerika vaqti (Beliz)',
        'America/Blanc-Sablon' => 'Atlantika vaqti (Blank-Sablon)',
        'America/Boa_Vista' => 'Amazonka vaqti (Boa-Vista)',
        'America/Bogota' => 'Kolumbiya vaqti (Bogota)',
        'America/Boise' => 'Tog‘ vaqti (AQSH) (Boyse)',
        'America/Buenos_Aires' => 'Argentina vaqti (Buenos-Ayres)',
        'America/Cambridge_Bay' => 'Tog‘ vaqti (AQSH) (Kembrij-Bey)',
        'America/Campo_Grande' => 'Amazonka vaqti (Kampu-Grandi)',
        'America/Cancun' => 'Sharqiy Amerika vaqti (Kankun)',
        'America/Caracas' => 'Venesuela vaqti (Karakas)',
        'America/Catamarca' => 'Argentina vaqti (Katamarka)',
        'America/Cayenne' => 'Fransuz Gvianasi vaqti (Kayenna)',
        'America/Cayman' => 'Sharqiy Amerika vaqti (Kayman orollari)',
        'America/Chicago' => 'Markaziy Amerika vaqti (Chikago)',
        'America/Chihuahua' => 'Markaziy Amerika vaqti (Chihuahua)',
        'America/Ciudad_Juarez' => 'Tog‘ vaqti (AQSH) (Ciudad Juárez)',
        'America/Coral_Harbour' => 'Sharqiy Amerika vaqti (Koral-Xarbor)',
        'America/Cordoba' => 'Argentina vaqti (Kordoba)',
        'America/Costa_Rica' => 'Markaziy Amerika vaqti (Kosta-Rika)',
        'America/Creston' => 'Tog‘ vaqti (AQSH) (Kreston)',
        'America/Cuiaba' => 'Amazonka vaqti (Kuyaba)',
        'America/Curacao' => 'Atlantika vaqti (Kyurasao)',
        'America/Danmarkshavn' => 'Grinvich o‘rtacha vaqti (Denmarksxavn)',
        'America/Dawson' => 'Yukon vaqti (Douson)',
        'America/Dawson_Creek' => 'Tog‘ vaqti (AQSH) (Douson-Krik)',
        'America/Denver' => 'Tog‘ vaqti (AQSH) (Denver)',
        'America/Detroit' => 'Sharqiy Amerika vaqti (Detroyt)',
        'America/Dominica' => 'Atlantika vaqti (Dominika)',
        'America/Edmonton' => 'Tog‘ vaqti (AQSH) (Edmonton)',
        'America/Eirunepe' => 'Braziliya (Eyrunepe)',
        'America/El_Salvador' => 'Markaziy Amerika vaqti (Salvador)',
        'America/Fort_Nelson' => 'Tog‘ vaqti (AQSH) (Fort Nelson)',
        'America/Fortaleza' => 'Braziliya vaqti (Fortaleza)',
        'America/Glace_Bay' => 'Atlantika vaqti (Gleys-Bey)',
        'America/Godthab' => 'Grenlandiya (Gotxob)',
        'America/Goose_Bay' => 'Atlantika vaqti (Gus-Bey)',
        'America/Grand_Turk' => 'Sharqiy Amerika vaqti (Grand Turk)',
        'America/Grenada' => 'Atlantika vaqti (Grenada)',
        'America/Guadeloupe' => 'Atlantika vaqti (Gvadelupa)',
        'America/Guatemala' => 'Markaziy Amerika vaqti (Gvatemala)',
        'America/Guayaquil' => 'Ekvador vaqti (Guayakil)',
        'America/Guyana' => 'Gayana vaqti',
        'America/Halifax' => 'Atlantika vaqti (Galifaks)',
        'America/Havana' => 'Kuba vaqti (Gavana)',
        'America/Hermosillo' => 'Meksika Tinch okeani vaqti (Ermosillo)',
        'America/Indiana/Knox' => 'Markaziy Amerika vaqti (Noks, Indiana)',
        'America/Indiana/Marengo' => 'Sharqiy Amerika vaqti (Marengo, Indiana)',
        'America/Indiana/Petersburg' => 'Sharqiy Amerika vaqti (Pitersberg, Indiana)',
        'America/Indiana/Tell_City' => 'Markaziy Amerika vaqti (Tell-Siti, Indiana)',
        'America/Indiana/Vevay' => 'Sharqiy Amerika vaqti (Vivey, Indiana)',
        'America/Indiana/Vincennes' => 'Sharqiy Amerika vaqti (Vinsens, Indiana)',
        'America/Indiana/Winamac' => 'Sharqiy Amerika vaqti (Vinamak, Indiana)',
        'America/Indianapolis' => 'Sharqiy Amerika vaqti (Indianapolis)',
        'America/Inuvik' => 'Tog‘ vaqti (AQSH) (Inuvik)',
        'America/Iqaluit' => 'Sharqiy Amerika vaqti (Ikaluit)',
        'America/Jamaica' => 'Sharqiy Amerika vaqti (Yamayka)',
        'America/Jujuy' => 'Argentina vaqti (Jujuy)',
        'America/Juneau' => 'Alyaska vaqti (Juno)',
        'America/Kentucky/Monticello' => 'Sharqiy Amerika vaqti (Montisello, Kentukki)',
        'America/Kralendijk' => 'Atlantika vaqti (Kralendeyk)',
        'America/La_Paz' => 'Boliviya vaqti (La-Pas)',
        'America/Lima' => 'Peru vaqti (Lima)',
        'America/Los_Angeles' => 'Tinch okeani vaqti (Los-Anjeles)',
        'America/Louisville' => 'Sharqiy Amerika vaqti (Luisvill)',
        'America/Lower_Princes' => 'Atlantika vaqti (Louer-Prinses-Kuorter)',
        'America/Maceio' => 'Braziliya vaqti (Maseyo)',
        'America/Managua' => 'Markaziy Amerika vaqti (Managua)',
        'America/Manaus' => 'Amazonka vaqti (Manaus)',
        'America/Marigot' => 'Atlantika vaqti (Marigo)',
        'America/Martinique' => 'Atlantika vaqti (Martinika)',
        'America/Matamoros' => 'Markaziy Amerika vaqti (Matamoros)',
        'America/Mazatlan' => 'Meksika Tinch okeani vaqti (Masatlan)',
        'America/Mendoza' => 'Argentina vaqti (Mendoza)',
        'America/Menominee' => 'Markaziy Amerika vaqti (Menomini)',
        'America/Merida' => 'Markaziy Amerika vaqti (Merida)',
        'America/Metlakatla' => 'Alyaska vaqti (Metlakatla)',
        'America/Mexico_City' => 'Markaziy Amerika vaqti (Mexiko)',
        'America/Miquelon' => 'Sen-Pyer va Mikelon vaqti',
        'America/Moncton' => 'Atlantika vaqti (Monkton)',
        'America/Monterrey' => 'Markaziy Amerika vaqti (Monterrey)',
        'America/Montevideo' => 'Urugvay vaqti (Montevideo)',
        'America/Montserrat' => 'Atlantika vaqti (Montserrat)',
        'America/Nassau' => 'Sharqiy Amerika vaqti (Nassau)',
        'America/New_York' => 'Sharqiy Amerika vaqti (Nyu-York)',
        'America/Nome' => 'Alyaska vaqti (Nom)',
        'America/Noronha' => 'Fernandu-di-Noronya vaqti',
        'America/North_Dakota/Beulah' => 'Markaziy Amerika vaqti (Boyla, Shimoliy Dakota)',
        'America/North_Dakota/Center' => 'Markaziy Amerika vaqti (Markaz, Shimoliy Dakota)',
        'America/North_Dakota/New_Salem' => 'Markaziy Amerika vaqti (Nyu-Salem, Shimoliy Dakota)',
        'America/Ojinaga' => 'Markaziy Amerika vaqti (Oxinaga)',
        'America/Panama' => 'Sharqiy Amerika vaqti (Panama)',
        'America/Paramaribo' => 'Surinam vaqti (Paramaribo)',
        'America/Phoenix' => 'Tog‘ vaqti (AQSH) (Feniks)',
        'America/Port-au-Prince' => 'Sharqiy Amerika vaqti (Port-o-Prens)',
        'America/Port_of_Spain' => 'Atlantika vaqti (Port-of-Speyn)',
        'America/Porto_Velho' => 'Amazonka vaqti (Portu-Velyu)',
        'America/Puerto_Rico' => 'Atlantika vaqti (Puerto-Riko)',
        'America/Punta_Arenas' => 'Chili vaqti (Punta-Arenas)',
        'America/Rankin_Inlet' => 'Markaziy Amerika vaqti (Rankin-Inlet)',
        'America/Recife' => 'Braziliya vaqti (Resifi)',
        'America/Regina' => 'Markaziy Amerika vaqti (Rejayna)',
        'America/Resolute' => 'Markaziy Amerika vaqti (Rezolyut)',
        'America/Rio_Branco' => 'Braziliya (Riu-Branku)',
        'America/Santarem' => 'Braziliya vaqti (Santarem)',
        'America/Santiago' => 'Chili vaqti (Santyago)',
        'America/Santo_Domingo' => 'Atlantika vaqti (Santo-Domingo)',
        'America/Sao_Paulo' => 'Braziliya vaqti (San-Paulu)',
        'America/Scoresbysund' => 'Grenlandiya (Ittokkortoormiut)',
        'America/Sitka' => 'Alyaska vaqti (Sitka)',
        'America/St_Barthelemy' => 'Atlantika vaqti (Sen-Bartelemi)',
        'America/St_Johns' => 'Nyufaundlend vaqti (Sent-Jons)',
        'America/St_Kitts' => 'Atlantika vaqti (Sent-Kits)',
        'America/St_Lucia' => 'Atlantika vaqti (Sent-Lyusiya)',
        'America/St_Thomas' => 'Atlantika vaqti (Sent-Tomas)',
        'America/St_Vincent' => 'Atlantika vaqti (Sent-Vinsent)',
        'America/Swift_Current' => 'Markaziy Amerika vaqti (Svift-Karrent)',
        'America/Tegucigalpa' => 'Markaziy Amerika vaqti (Tegusigalpa)',
        'America/Thule' => 'Atlantika vaqti (Tule)',
        'America/Tijuana' => 'Tinch okeani vaqti (Tixuana)',
        'America/Toronto' => 'Sharqiy Amerika vaqti (Toronto)',
        'America/Tortola' => 'Atlantika vaqti (Tortola)',
        'America/Vancouver' => 'Tinch okeani vaqti (Vankuver)',
        'America/Whitehorse' => 'Yukon vaqti (Uaytxors)',
        'America/Winnipeg' => 'Markaziy Amerika vaqti (Vinnipeg)',
        'America/Yakutat' => 'Alyaska vaqti (Yakutat)',
        'Antarctica/Casey' => 'G‘arbiy Avstraliya vaqti (Keysi)',
        'Antarctica/Davis' => 'Deyvis vaqti',
        'Antarctica/DumontDUrville' => 'Dyumon-d’Yurvil vaqti',
        'Antarctica/Macquarie' => 'Sharqiy Avstraliya vaqti (Makkuori)',
        'Antarctica/Mawson' => 'Mouson vaqti',
        'Antarctica/McMurdo' => 'Yangi Zelandiya vaqti (Mak-Merdo)',
        'Antarctica/Palmer' => 'Chili vaqti (Palmer)',
        'Antarctica/Rothera' => 'Rotera vaqti',
        'Antarctica/Syowa' => 'Syova vaqti',
        'Antarctica/Troll' => 'Grinvich o‘rtacha vaqti (Troll)',
        'Antarctica/Vostok' => 'Vostok vaqti',
        'Arctic/Longyearbyen' => 'Markaziy Yevropa vaqti (Longyir)',
        'Asia/Aden' => 'Saudiya Arabistoni vaqti (Adan)',
        'Asia/Almaty' => 'Qozogʻiston vaqti (Almati)',
        'Asia/Amman' => 'Sharqiy Yevropa vaqti (Ammon)',
        'Asia/Anadyr' => 'Rossiya (Anadir)',
        'Asia/Aqtau' => 'Qozogʻiston vaqti (Oqtov)',
        'Asia/Aqtobe' => 'Qozogʻiston vaqti (Oqto‘ba)',
        'Asia/Ashgabat' => 'Turkmaniston vaqti (Ashxobod)',
        'Asia/Atyrau' => 'Qozogʻiston vaqti (Atirau)',
        'Asia/Baghdad' => 'Saudiya Arabistoni vaqti (Bag‘dod)',
        'Asia/Bahrain' => 'Saudiya Arabistoni vaqti (Bahrayn)',
        'Asia/Baku' => 'Ozarbayjon vaqti (Boku)',
        'Asia/Bangkok' => 'Hindixitoy vaqti (Bangkok)',
        'Asia/Barnaul' => 'Rossiya (Barnaul)',
        'Asia/Beirut' => 'Sharqiy Yevropa vaqti (Bayrut)',
        'Asia/Bishkek' => 'Qirgʻiziston vaqti (Bishkek)',
        'Asia/Brunei' => 'Bruney-Dorussalom vaqti',
        'Asia/Calcutta' => 'Hindiston standart vaqti (Kalkutta)',
        'Asia/Chita' => 'Yakutsk vaqti (Chita)',
        'Asia/Colombo' => 'Hindiston standart vaqti (Kolombo)',
        'Asia/Damascus' => 'Sharqiy Yevropa vaqti (Damashq)',
        'Asia/Dhaka' => 'Bangladesh vaqti (Dakka)',
        'Asia/Dili' => 'Sharqiy Timor vaqti (Dili)',
        'Asia/Dubai' => 'Fors ko‘rfazi standart vaqti (Dubay)',
        'Asia/Dushanbe' => 'Tojikiston vaqti (Dushanbe)',
        'Asia/Famagusta' => 'Sharqiy Yevropa vaqti (Famagusta)',
        'Asia/Gaza' => 'Sharqiy Yevropa vaqti (G‘azo)',
        'Asia/Hebron' => 'Sharqiy Yevropa vaqti (Xevron)',
        'Asia/Hong_Kong' => 'Gonkong vaqti',
        'Asia/Hovd' => 'Xovd vaqti',
        'Asia/Irkutsk' => 'Irkutsk vaqti',
        'Asia/Jakarta' => 'Gʻarbiy Indoneziya vaqti (Jakarta)',
        'Asia/Jayapura' => 'Sharqiy Indoneziya vaqti (Jaypur)',
        'Asia/Jerusalem' => 'Isroil vaqti (Quddus)',
        'Asia/Kabul' => 'Afgʻoniston vaqti (Qobul)',
        'Asia/Kamchatka' => 'Rossiya (Kamchatka)',
        'Asia/Karachi' => 'Pokiston vaqti (Karachi)',
        'Asia/Katmandu' => 'Nepal vaqti (Katmandu)',
        'Asia/Khandyga' => 'Yakutsk vaqti (Xandiga)',
        'Asia/Krasnoyarsk' => 'Krasnoyarsk vaqti',
        'Asia/Kuala_Lumpur' => 'Malayziya vaqti (Kuala-Lumpur)',
        'Asia/Kuching' => 'Malayziya vaqti (Kuching)',
        'Asia/Kuwait' => 'Saudiya Arabistoni vaqti (Quvayt)',
        'Asia/Macau' => 'Xitoy vaqti (Makao)',
        'Asia/Magadan' => 'Magadan vaqti',
        'Asia/Makassar' => 'Markaziy Indoneziya vaqti (Makasar)',
        'Asia/Manila' => 'Filippin vaqti (Manila)',
        'Asia/Muscat' => 'Fors ko‘rfazi standart vaqti (Maskat)',
        'Asia/Nicosia' => 'Sharqiy Yevropa vaqti (Nikosiya)',
        'Asia/Novokuznetsk' => 'Krasnoyarsk vaqti (Novokuznetsk)',
        'Asia/Novosibirsk' => 'Novosibirsk vaqti',
        'Asia/Omsk' => 'Omsk vaqti',
        'Asia/Oral' => 'Qozogʻiston vaqti (Uralsk)',
        'Asia/Phnom_Penh' => 'Hindixitoy vaqti (Pnompen)',
        'Asia/Pontianak' => 'Gʻarbiy Indoneziya vaqti (Pontianak)',
        'Asia/Pyongyang' => 'Koreya vaqti (Pxenyan)',
        'Asia/Qatar' => 'Saudiya Arabistoni vaqti (Qatar)',
        'Asia/Qostanay' => 'Qozogʻiston vaqti (Qoʻstanay)',
        'Asia/Qyzylorda' => 'Qozogʻiston vaqti (Qizilo‘rda)',
        'Asia/Rangoon' => 'Myanma vaqti (Rangun)',
        'Asia/Riyadh' => 'Saudiya Arabistoni vaqti (Ar-Riyod)',
        'Asia/Saigon' => 'Hindixitoy vaqti (Xoshimin)',
        'Asia/Sakhalin' => 'Saxalin vaqti',
        'Asia/Samarkand' => 'O‘zbekiston vaqti (Samarqand)',
        'Asia/Seoul' => 'Koreya vaqti (Seul)',
        'Asia/Shanghai' => 'Xitoy vaqti (Shanxay)',
        'Asia/Singapore' => 'Singapur vaqti',
        'Asia/Srednekolymsk' => 'Magadan vaqti (Srednekolimsk)',
        'Asia/Taipei' => 'Tayvan vaqti (Taypey)',
        'Asia/Tashkent' => 'O‘zbekiston vaqti (Toshkent)',
        'Asia/Tbilisi' => 'Gruziya vaqti (Tbilisi)',
        'Asia/Tehran' => 'Eron vaqti (Tehron)',
        'Asia/Thimphu' => 'Butan vaqti (Thimphu)',
        'Asia/Tokyo' => 'Yaponiya vaqti (Tokio)',
        'Asia/Tomsk' => 'Rossiya (Tomsk)',
        'Asia/Ulaanbaatar' => 'Ulan-Bator vaqti',
        'Asia/Urumqi' => 'Xitoy (Urumchi)',
        'Asia/Ust-Nera' => 'Vladivostok vaqti (Ust-Nera)',
        'Asia/Vientiane' => 'Hindixitoy vaqti (Vyentyan)',
        'Asia/Vladivostok' => 'Vladivostok vaqti',
        'Asia/Yakutsk' => 'Yakutsk vaqti',
        'Asia/Yekaterinburg' => 'Yekaterinburg vaqti',
        'Asia/Yerevan' => 'Armaniston vaqti (Yerevan)',
        'Atlantic/Azores' => 'Azor orollari vaqti',
        'Atlantic/Bermuda' => 'Atlantika vaqti (Bermuda orollari)',
        'Atlantic/Canary' => 'G‘arbiy Yevropa vaqti (Kanar orollari)',
        'Atlantic/Cape_Verde' => 'Kabo-Verde vaqti',
        'Atlantic/Faeroe' => 'G‘arbiy Yevropa vaqti (Farer orollari)',
        'Atlantic/Madeira' => 'G‘arbiy Yevropa vaqti (Madeyra oroli)',
        'Atlantic/Reykjavik' => 'Grinvich o‘rtacha vaqti (Reykyavik)',
        'Atlantic/South_Georgia' => 'Janubiy Georgiya vaqti',
        'Atlantic/St_Helena' => 'Grinvich o‘rtacha vaqti (Muqaddas Yelena oroli)',
        'Atlantic/Stanley' => 'Folklend orollari vaqti (Stenli)',
        'Australia/Adelaide' => 'Markaziy Avstraliya vaqti (Adelaida)',
        'Australia/Brisbane' => 'Sharqiy Avstraliya vaqti (Brisben)',
        'Australia/Broken_Hill' => 'Markaziy Avstraliya vaqti (Broken-Xill)',
        'Australia/Darwin' => 'Markaziy Avstraliya vaqti (Darvin)',
        'Australia/Eucla' => 'Markaziy Avstraliya g‘arbiy vaqti (Evkla)',
        'Australia/Hobart' => 'Sharqiy Avstraliya vaqti (Xobart)',
        'Australia/Lindeman' => 'Sharqiy Avstraliya vaqti (Lindeman)',
        'Australia/Lord_Howe' => 'Lord-Xau vaqti (Lord-Xau oroli)',
        'Australia/Melbourne' => 'Sharqiy Avstraliya vaqti (Melburn)',
        'Australia/Perth' => 'G‘arbiy Avstraliya vaqti (Pert)',
        'Australia/Sydney' => 'Sharqiy Avstraliya vaqti (Sidney)',
        'Etc/GMT' => 'Grinvich o‘rtacha vaqti',
        'Etc/UTC' => 'Koordinatali universal vaqt',
        'Europe/Amsterdam' => 'Markaziy Yevropa vaqti (Amsterdam)',
        'Europe/Andorra' => 'Markaziy Yevropa vaqti (Andorra)',
        'Europe/Astrakhan' => 'Moskva vaqti (Astraxan)',
        'Europe/Athens' => 'Sharqiy Yevropa vaqti (Afina)',
        'Europe/Belgrade' => 'Markaziy Yevropa vaqti (Belgrad)',
        'Europe/Berlin' => 'Markaziy Yevropa vaqti (Berlin)',
        'Europe/Bratislava' => 'Markaziy Yevropa vaqti (Bratislava)',
        'Europe/Brussels' => 'Markaziy Yevropa vaqti (Bryussel)',
        'Europe/Bucharest' => 'Sharqiy Yevropa vaqti (Buxarest)',
        'Europe/Budapest' => 'Markaziy Yevropa vaqti (Budapesht)',
        'Europe/Busingen' => 'Markaziy Yevropa vaqti (Byuzingen)',
        'Europe/Chisinau' => 'Sharqiy Yevropa vaqti (Kishinyov)',
        'Europe/Copenhagen' => 'Markaziy Yevropa vaqti (Kopengagen)',
        'Europe/Dublin' => 'Grinvich o‘rtacha vaqti (Dublin)',
        'Europe/Gibraltar' => 'Markaziy Yevropa vaqti (Gibraltar)',
        'Europe/Guernsey' => 'Grinvich o‘rtacha vaqti (Gernsi)',
        'Europe/Helsinki' => 'Sharqiy Yevropa vaqti (Xelsinki)',
        'Europe/Isle_of_Man' => 'Grinvich o‘rtacha vaqti (Men oroli)',
        'Europe/Istanbul' => 'Turkiya (Istanbul)',
        'Europe/Jersey' => 'Grinvich o‘rtacha vaqti (Jersi)',
        'Europe/Kaliningrad' => 'Sharqiy Yevropa vaqti (Kaliningrad)',
        'Europe/Kiev' => 'Sharqiy Yevropa vaqti (Kiyev)',
        'Europe/Kirov' => 'Rossiya (Kirov)',
        'Europe/Lisbon' => 'G‘arbiy Yevropa vaqti (Lissabon)',
        'Europe/Ljubljana' => 'Markaziy Yevropa vaqti (Lyublyana)',
        'Europe/London' => 'Grinvich o‘rtacha vaqti (London)',
        'Europe/Luxembourg' => 'Markaziy Yevropa vaqti (Lyuksemburg)',
        'Europe/Madrid' => 'Markaziy Yevropa vaqti (Madrid)',
        'Europe/Malta' => 'Markaziy Yevropa vaqti (Malta)',
        'Europe/Mariehamn' => 'Sharqiy Yevropa vaqti (Mariyexamn)',
        'Europe/Minsk' => 'Moskva vaqti (Minsk)',
        'Europe/Monaco' => 'Markaziy Yevropa vaqti (Monako)',
        'Europe/Moscow' => 'Moskva vaqti',
        'Europe/Oslo' => 'Markaziy Yevropa vaqti (Oslo)',
        'Europe/Paris' => 'Markaziy Yevropa vaqti (Parij)',
        'Europe/Podgorica' => 'Markaziy Yevropa vaqti (Podgoritsa)',
        'Europe/Prague' => 'Markaziy Yevropa vaqti (Praga)',
        'Europe/Riga' => 'Sharqiy Yevropa vaqti (Riga)',
        'Europe/Rome' => 'Markaziy Yevropa vaqti (Rim)',
        'Europe/Samara' => 'Rossiya (Samara)',
        'Europe/San_Marino' => 'Markaziy Yevropa vaqti (San-Marino)',
        'Europe/Sarajevo' => 'Markaziy Yevropa vaqti (Sarayevo)',
        'Europe/Saratov' => 'Moskva vaqti (Saratov)',
        'Europe/Simferopol' => 'Moskva vaqti (Simferopol)',
        'Europe/Skopje' => 'Markaziy Yevropa vaqti (Skopye)',
        'Europe/Sofia' => 'Sharqiy Yevropa vaqti (Sofiya)',
        'Europe/Stockholm' => 'Markaziy Yevropa vaqti (Stokgolm)',
        'Europe/Tallinn' => 'Sharqiy Yevropa vaqti (Tallin)',
        'Europe/Tirane' => 'Markaziy Yevropa vaqti (Tirana)',
        'Europe/Ulyanovsk' => 'Moskva vaqti (Ulyanovsk)',
        'Europe/Vaduz' => 'Markaziy Yevropa vaqti (Vaduts)',
        'Europe/Vatican' => 'Markaziy Yevropa vaqti (Vatikan)',
        'Europe/Vienna' => 'Markaziy Yevropa vaqti (Vena)',
        'Europe/Vilnius' => 'Sharqiy Yevropa vaqti (Vilnyus)',
        'Europe/Volgograd' => 'Volgograd vaqti',
        'Europe/Warsaw' => 'Markaziy Yevropa vaqti (Varshava)',
        'Europe/Zagreb' => 'Markaziy Yevropa vaqti (Zagreb)',
        'Europe/Zurich' => 'Markaziy Yevropa vaqti (Syurix)',
        'Indian/Antananarivo' => 'Sharqiy Afrika vaqti (Antananarivu)',
        'Indian/Chagos' => 'Hind okeani vaqti (Chagos)',
        'Indian/Christmas' => 'Rojdestvo oroli vaqti',
        'Indian/Cocos' => 'Kokos orollari vaqti',
        'Indian/Comoro' => 'Sharqiy Afrika vaqti (Komor orollari)',
        'Indian/Kerguelen' => 'Fransuz Janubiy hududlari va Antarktika vaqti (Kergelen)',
        'Indian/Mahe' => 'Seyshel orollari vaqti (Mae)',
        'Indian/Maldives' => 'Maldiv orollari vaqti',
        'Indian/Mauritius' => 'Mavrikiy vaqti',
        'Indian/Mayotte' => 'Sharqiy Afrika vaqti (Mayorka)',
        'Indian/Reunion' => 'Reyunion vaqti',
        'Pacific/Apia' => 'Apia vaqti',
        'Pacific/Auckland' => 'Yangi Zelandiya vaqti (Oklend)',
        'Pacific/Bougainville' => 'Papua-Yangi Gvineya vaqti (Bugenvil)',
        'Pacific/Chatham' => 'Chatem vaqti (Chatem oroli)',
        'Pacific/Easter' => 'Pasxa oroli vaqti',
        'Pacific/Efate' => 'Vanuatu vaqti (Efate)',
        'Pacific/Enderbury' => 'Feniks orollari vaqti (Enderberi oroli)',
        'Pacific/Fakaofo' => 'Tokelau vaqti (Fakaofo)',
        'Pacific/Fiji' => 'Fiji vaqti',
        'Pacific/Funafuti' => 'Tuvalu vaqti (Funafuti)',
        'Pacific/Galapagos' => 'Galapagos vaqti',
        'Pacific/Gambier' => 'Gambye vaqti (Gambye oroli)',
        'Pacific/Guadalcanal' => 'Solomon orollari vaqti (Gvadalkanal)',
        'Pacific/Guam' => 'Chamorro standart vaqti (Guam)',
        'Pacific/Honolulu' => 'Gavayi-aleut vaqti (Gonolulu)',
        'Pacific/Kiritimati' => 'Layn orollari vaqti (Kiritimati)',
        'Pacific/Kosrae' => 'Kosrae vaqti',
        'Pacific/Kwajalein' => 'Marshall orollari vaqti (Kvajaleyn)',
        'Pacific/Majuro' => 'Marshall orollari vaqti (Majuro)',
        'Pacific/Marquesas' => 'Markiz orollari vaqti',
        'Pacific/Midway' => 'Samoa vaqti (Midvey orollari)',
        'Pacific/Nauru' => 'Nauru vaqti',
        'Pacific/Niue' => 'Niuye vaqti (Niue)',
        'Pacific/Norfolk' => 'Norfolk oroli vaqti',
        'Pacific/Noumea' => 'Yangi Kaledoniya vaqti (Numea)',
        'Pacific/Pago_Pago' => 'Samoa vaqti (Pago-Pago)',
        'Pacific/Palau' => 'Palau vaqti',
        'Pacific/Pitcairn' => 'Pitkern vaqti',
        'Pacific/Ponape' => 'Ponape vaqti (Ponpei oroli)',
        'Pacific/Port_Moresby' => 'Papua-Yangi Gvineya vaqti (Port-Morsbi)',
        'Pacific/Rarotonga' => 'Kuk orollari vaqti (Rarotonga)',
        'Pacific/Saipan' => 'Chamorro standart vaqti (Saypan)',
        'Pacific/Tahiti' => 'Taiti vaqti (Taiti oroli)',
        'Pacific/Tarawa' => 'Gilbert orollari vaqti (Tarava)',
        'Pacific/Tongatapu' => 'Tonga vaqti (Tongatapu)',
        'Pacific/Truk' => 'Chuuk vaqti (Truk orollari)',
        'Pacific/Wake' => 'Ueyk oroli vaqti',
        'Pacific/Wallis' => 'Uollis va Futuna vaqti',
    ],
    'Meta' => [],
];
";s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";