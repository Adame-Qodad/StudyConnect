1749751335
0f81f4de6dfd2d6058f2f36fc781f24f-phpdoc%3A85bce670e802e3b10dd72ea1a2aa9342-06049cf4275b7e10c5125523e7ff7215
s:5940:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lIjtzOjEyOiJzZXJ2aWNlcy5waHAiO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbmFtZXNwYWNlcyI7YTowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbmNsdWRlcyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBmdW5jdGlvbnMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY29uc3RhbnRzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNsYXNzZXMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW50ZXJmYWNlcyI7YTowOnt9czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQB0cmFpdHMiO2E6MDp7fXM6NDA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZW51bXMiO2E6MDp7fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaGFzaCI7czozMjoiMDYwNDljZjQyNzViN2UxMGM1MTI1NTIzZTdmZjcyMTUiO3M6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAcGF0aCI7czo1MDoidmVuZG9yL3N5bWZvbnkvc3RpbXVsdXMtYnVuZGxlL2NvbmZpZy9zZXJ2aWNlcy5waHAiO3M6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAc291cmNlIjtzOjM1MjQ6Ijw/cGhwCgovKgogKiBUaGlzIGZpbGUgaXMgcGFydCBvZiB0aGUgU3ltZm9ueSBwYWNrYWdlLgogKgogKiAoYykgRmFiaWVuIFBvdGVuY2llciA8ZmFiaWVuQHN5bWZvbnkuY29tPgogKgogKiBGb3IgdGhlIGZ1bGwgY29weXJpZ2h0IGFuZCBsaWNlbnNlIGluZm9ybWF0aW9uLCBwbGVhc2UgdmlldyB0aGUgTElDRU5TRQogKiBmaWxlIHRoYXQgd2FzIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyBzb3VyY2UgY29kZS4KICovCgp1c2UgU3ltZm9ueVxDb21wb25lbnRcRGVwZW5kZW5jeUluamVjdGlvblxMb2FkZXJcQ29uZmlndXJhdG9yXENvbnRhaW5lckNvbmZpZ3VyYXRvcjsKdXNlIFN5bWZvbnlcVVhcU3RpbXVsdXNCdW5kbGVcQXNzZXRNYXBwZXJcQXV0b0ltcG9ydExvY2F0b3I7CnVzZSBTeW1mb255XFVYXFN0aW11bHVzQnVuZGxlXEFzc2V0TWFwcGVyXENvbnRyb2xsZXJzTWFwR2VuZXJhdG9yOwp1c2UgU3ltZm9ueVxVWFxTdGltdWx1c0J1bmRsZVxBc3NldE1hcHBlclxTdGltdWx1c0xvYWRlckphdmFTY3JpcHRDb21waWxlcjsKdXNlIFN5bWZvbnlcVVhcU3RpbXVsdXNCdW5kbGVcSGVscGVyXFN0aW11bHVzSGVscGVyOwp1c2UgU3ltZm9ueVxVWFxTdGltdWx1c0J1bmRsZVxUd2lnXFN0aW11bHVzVHdpZ0V4dGVuc2lvbjsKdXNlIFN5bWZvbnlcVVhcU3RpbXVsdXNCdW5kbGVcVHdpZ1xVeENvbnRyb2xsZXJzVHdpZ0V4dGVuc2lvbjsKdXNlIFN5bWZvbnlcVVhcU3RpbXVsdXNCdW5kbGVcVHdpZ1xVeENvbnRyb2xsZXJzVHdpZ1J1bnRpbWU7CnVzZSBTeW1mb255XFVYXFN0aW11bHVzQnVuZGxlXFV4XFV4UGFja2FnZVJlYWRlcjsKdXNlIFR3aWdcRW52aXJvbm1lbnQ7Cgp1c2UgZnVuY3Rpb24gU3ltZm9ueVxDb21wb25lbnRcRGVwZW5kZW5jeUluamVjdGlvblxMb2FkZXJcQ29uZmlndXJhdG9yXGFic3RyYWN0X2FyZzsKdXNlIGZ1bmN0aW9uIFN5bWZvbnlcQ29tcG9uZW50XERlcGVuZGVuY3lJbmplY3Rpb25cTG9hZGVyXENvbmZpZ3VyYXRvclxwYXJhbTsKdXNlIGZ1bmN0aW9uIFN5bWZvbnlcQ29tcG9uZW50XERlcGVuZGVuY3lJbmplY3Rpb25cTG9hZGVyXENvbmZpZ3VyYXRvclxzZXJ2aWNlOwoKcmV0dXJuIHN0YXRpYyBmdW5jdGlvbiAoQ29udGFpbmVyQ29uZmlndXJhdG9yICRjb250YWluZXIpOiB2b2lkIHsKICAgICRjb250YWluZXItPnNlcnZpY2VzKCkKICAgICAgICAtPnNldCgnc3RpbXVsdXMuaGVscGVyJywgU3RpbXVsdXNIZWxwZXI6OmNsYXNzKQogICAgICAgICAgICAtPmFyZ3MoWwogICAgICAgICAgICAgICAgc2VydmljZShFbnZpcm9ubWVudDo6Y2xhc3MpLT5udWxsT25JbnZhbGlkKCksCiAgICAgICAgICAgIF0pCgogICAgICAgIC0+c2V0KCdzdGltdWx1cy50d2lnX2V4dGVuc2lvbicsIFN0aW11bHVzVHdpZ0V4dGVuc2lvbjo6Y2xhc3MpCiAgICAgICAgICAgIC0+YXJncyhbCiAgICAgICAgICAgICAgICBzZXJ2aWNlKCdzdGltdWx1cy5oZWxwZXInKSwKICAgICAgICAgICAgXSkKICAgICAgICAgICAgLy8gbmVnYXRpdmUgcHJpb3JpdHkgYWN0dWFsbHkgY2F1c2VzIHRoZSBzdGltdWx1c18gZnVuY3Rpb25zIGZyb20gdGhpcwogICAgICAgICAgICAvLyBidW5kbGUgdG8gYmUgdXNlZCBpbnN0ZWFkIG9mIHRoZSBvbmVzIGZyb20gV2VicGFja0VuY29yZUJ1bmRsZS4KICAgICAgICAgICAgLT50YWcoJ3R3aWcuZXh0ZW5zaW9uJywgWydwcmlvcml0eScgPT4gLTEwXSkKCiAgICAgICAgLT5zZXQoJ3N0aW11bHVzLmFzc2V0X21hcHBlci51eF9wYWNrYWdlX3JlYWRlcicsIFV4UGFja2FnZVJlYWRlcjo6Y2xhc3MpCiAgICAgICAgICAgIC0+YXJncyhbCiAgICAgICAgICAgICAgICBwYXJhbSgna2VybmVsLnByb2plY3RfZGlyJyksCiAgICAgICAgICAgIF0pCgogICAgICAgIC8vIHN5bWZvbnkvYXNzZXQtbWFwcGVyIHNlcnZpY2VzCiAgICAgICAgLT5zZXQoJ3N0aW11bHVzLnV4X2NvbnRyb2xsZXJzX3R3aWdfZXh0ZW5zaW9uJywgVXhDb250cm9sbGVyc1R3aWdFeHRlbnNpb246OmNsYXNzKQogICAgICAgICAgICAtPnRhZygndHdpZy5leHRlbnNpb24nKQoKICAgICAgICAtPnNldCgnc3RpbXVsdXMudXhfY29udHJvbGxlcnNfdHdpZ19ydW50aW1lJywgVXhDb250cm9sbGVyc1R3aWdSdW50aW1lOjpjbGFzcykKICAgICAgICAgICAgLT5hcmdzKFsKICAgICAgICAgICAgICAgIHNlcnZpY2UoJ3N0aW11bHVzLmFzc2V0X21hcHBlci5jb250cm9sbGVyc19tYXBfZ2VuZXJhdG9yJyksCiAgICAgICAgICAgICAgICBzZXJ2aWNlKCdhc3NldF9tYXBwZXInKSwKICAgICAgICAgICAgICAgIHNlcnZpY2UoJ3N0aW11bHVzLmFzc2V0X21hcHBlci51eF9wYWNrYWdlX3JlYWRlcicpLAogICAgICAgICAgICAgICAgcGFyYW0oJ2tlcm5lbC5wcm9qZWN0X2RpcicpLAogICAgICAgICAgICBdKQogICAgICAgICAgICAtPnRhZygndHdpZy5ydW50aW1lJykKCiAgICAgICAgLT5zZXQoJ3N0aW11bHVzLmFzc2V0X21hcHBlci5jb250cm9sbGVyc19tYXBfZ2VuZXJhdG9yJywgQ29udHJvbGxlcnNNYXBHZW5lcmF0b3I6OmNsYXNzKQogICAgICAgICAgICAtPmFyZ3MoWwogICAgICAgICAgICAgICAgc2VydmljZSgnYXNzZXRfbWFwcGVyJyksCiAgICAgICAgICAgICAgICBzZXJ2aWNlKCdzdGltdWx1cy5hc3NldF9tYXBwZXIudXhfcGFja2FnZV9yZWFkZXInKSwKICAgICAgICAgICAgICAgIGFic3RyYWN0X2FyZygnY29udHJvbGxlciBwYXRocycpLAogICAgICAgICAgICAgICAgYWJzdHJhY3RfYXJnKCdjb250cm9sbGVyc19qc29uX3BhdGgnKSwKICAgICAgICAgICAgICAgIC8vIEBsZWdhY3kgLSBvbmx5IGFsbG93aW5nIG51bGwgZm9yIGZyYW1ld29yay1idW5kbGUgNi4zCiAgICAgICAgICAgICAgICBzZXJ2aWNlKCdzdGltdWx1cy5hc3NldF9tYXBwZXIuYXV0b19pbXBvcnRfbG9jYXRvcicpLT5udWxsT25JbnZhbGlkKCksCiAgICAgICAgICAgIF0pCgogICAgICAgIC8vIEBsZWdhY3kgLSBpcyByZW1vdmVkIGluIDYuMwogICAgICAgIC0+c2V0KCdzdGltdWx1cy5hc3NldF9tYXBwZXIuYXV0b19pbXBvcnRfbG9jYXRvcicsIEF1dG9JbXBvcnRMb2NhdG9yOjpjbGFzcykKICAgICAgICAgICAgLT5hcmdzKFsKICAgICAgICAgICAgICAgIHNlcnZpY2UoJ2Fzc2V0X21hcHBlci5pbXBvcnRtYXAuY29uZmlnX3JlYWRlcicpLAogICAgICAgICAgICAgICAgc2VydmljZSgnYXNzZXRfbWFwcGVyJyksCiAgICAgICAgICAgIF0pCgogICAgICAgIC0+c2V0KCdzdGltdWx1cy5hc3NldF9tYXBwZXIubG9hZGVyX2phdmFzY3JpcHRfY29tcGlsZXInLCBTdGltdWx1c0xvYWRlckphdmFTY3JpcHRDb21waWxlcjo6Y2xhc3MpCiAgICAgICAgICAgIC0+YXJncyhbCiAgICAgICAgICAgICAgICBzZXJ2aWNlKCdzdGltdWx1cy5hc3NldF9tYXBwZXIuY29udHJvbGxlcnNfbWFwX2dlbmVyYXRvcicpLAogICAgICAgICAgICAgICAgcGFyYW0oJ2tlcm5lbC5kZWJ1ZycpLAogICAgICAgICAgICBdKQogICAgICAgICAgICAtPnRhZygnYXNzZXRfbWFwcGVyLmNvbXBpbGVyJywgWydwcmlvcml0eScgPT4gMTAwXSkKICAgIDsKfTsKIjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGRvY0Jsb2NrIjtOO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbWV0YWRhdGEiO2E6MDp7fX0=";